{"version":3,"file":"static/js/519.aa1b6b36.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Login/Login.module.scss?4086","webpack://my-app/./src/components/Registration/Steps/Steps.module.scss?8dee","webpack://my-app/./src/UI/SaveBtn/SaveBtn.module.scss?355b","UI/SaveBtn/SaveBtn.tsx","components/Registration/Steps/InitialsFields.tsx","webpack://my-app/./src/components/Registration/Registration.module.scss?ed51","components/Registration/Steps/InfoFields.tsx","components/Registration/Steps/SchoolFields.tsx","components/Registration/Steps/LoginFields.tsx","webpack://my-app/./src/components/Registration/Steps/AvatarUpload/AvatarUpload.module.scss?5f7f","webpack://my-app/./src/UI/CloseBtn/CloseBtn.module.scss?6093","UI/CloseBtn/CloseBtn.tsx","components/Registration/Steps/AvatarUpload/AvatarUpload.tsx","components/Registration/Registration.tsx","components/Login/Login.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Login_container__GTm7y\",\"Login\":\"Login_Login__SNwn9\",\"loginBtn\":\"Login_loginBtn__VgiBx\",\"googleIcon\":\"Login_googleIcon__f6ztb\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Steps_container__DRUOh\",\"Step\":\"Steps_Step__GzM40\",\"form\":\"Steps_form__h6Ltk\",\"fieldWrapper\":\"Steps_fieldWrapper__8or4a\",\"image\":\"Steps_image__taPnT\",\"title\":\"Steps_title__5tfQh\",\"btn\":\"Steps_btn__A6Rwe\",\"iconWrapper\":\"Steps_iconWrapper__MOWFA\",\"icon\":\"Steps_icon__5xxC2\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"SaveBtn_container__OBhbf\",\"SaveBtn\":\"SaveBtn_SaveBtn__pYyIr\",\"iconWrapper\":\"SaveBtn_iconWrapper__NWLHw\",\"icon\":\"SaveBtn_icon__P7YWw\"};","import React from 'react';\r\nimport classes from './SaveBtn.module.scss';\r\nimport EastIcon from '@mui/icons-material/East';\r\nimport cn from 'classnames';\r\nimport { IconButton } from '@mui/material';\r\n\r\ntype PropsType = {\r\n\tonClick: () => void,\r\n\tclassName?: string,\r\n}\r\n\r\nexport const SaveBtn: React.FC<PropsType> = ({onClick, className}) => {\r\n  return (\r\n\t<button className={cn(classes.SaveBtn, className)} onClick={onClick}>\r\n\t\t<span>Зберегти</span>\r\n\t\t<IconButton color='warning' className={classes.iconWrapper}>\r\n\t\t\t<EastIcon color='inherit' className={classes.icon} />\r\n\t\t</IconButton>\r\n\t</button>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { Control, Controller } from 'react-hook-form';\r\nimport { RegistrationFieldValues } from '../Registration';\r\nimport classes from './Steps.module.scss';\r\nimport { FormControl, TextField } from '@mui/material';\r\nimport { SaveBtn } from '../../../UI/SaveBtn';\r\n\r\ntype PropsType = {\r\n\tcontrol: Control<RegistrationFieldValues, any>,\r\n\tnextStep: () => void,\r\n};\r\n\r\nexport const InitialsFields: React.FC<PropsType> = ({control, nextStep}) => {\r\n\treturn (\r\n\t\t<section className={classes.Step}>\r\n\t\t\t<h2 className={classes.title}>Як Вас звуть?</h2>\r\n\t\t\t{/* <div className={classes.image}>\r\n\t\t\t\t<img src={initialsImg} />\r\n\t\t\t</div> */}\r\n\t\t\t<div className={classes.form}>\r\n\t\t\t\t{/* @ts-ignore */}\r\n\t\t\t\t<Controller \r\n\t\t\t\t\tcontrol={control}\r\n\t\t\t\t\tname={'name'}\r\n\t\t\t\t\trender={({field: {value, onChange}}) => (\r\n\t\t\t\t\t\t<FormControl fullWidth className={classes.fieldWrapper}>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tlabel={`Ім'я`}\r\n\t\t\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t{/* @ts-ignore */}\r\n\t\t\t\t<Controller \r\n\t\t\t\t\tcontrol={control}\r\n\t\t\t\t\trules={{\r\n\t\t\t\t\t\tpattern: /[А-Я]+/\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tname={'surname'}\r\n\t\t\t\t\trender={({field: {value, onChange}}) => (\r\n\t\t\t\t\t\t<FormControl className={classes.fieldWrapper}>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tlabel={`Прізвище`}\r\n\t\t\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<SaveBtn onClick={nextStep} className={classes.btn} />\r\n\t\t</section>\r\n\t)\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Registration_container__L80RI\",\"Registration\":\"Registration_Registration__++dgP\"};","import {  Form, Input } from 'antd';\r\nimport React from 'react';\r\nimport { Control, Controller, FieldErrors } from 'react-hook-form';\r\nimport { RegistrationFieldValues } from '../Registration';\r\nimport classes from './Steps.module.scss';\r\nimport aboutImg from '../../../assets/images/about_img.png';\r\nimport TextArea from 'antd/lib/input/TextArea';\r\nimport { FormControl, IconButton, TextField } from '@mui/material';\r\nimport { DatePicker, LocalizationProvider } from '@mui/x-date-pickers';\r\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\r\nimport EastIcon from '@mui/icons-material/East';\r\n\r\n\r\ntype PropsType = {\r\n\tcontrol: Control<RegistrationFieldValues, any>,\r\n\terrors: FieldErrors<RegistrationFieldValues>,\r\n\tnextStep: () => void,\r\n};\r\n\r\nexport const InfoFields: React.FC<PropsType> = ({control, nextStep, errors}) => {\r\n\treturn (\r\n\t\t<div className={classes.Step}>\r\n\t\t\t<h2 className={classes.title}>Напишіть про себе</h2>\r\n\t\t\t<div className={classes.image}>\r\n\t\t\t\t<img src={aboutImg} />\r\n\t\t\t</div>\r\n\t\t\t<form className={classes.form}>\r\n\t\t\t\t{/* @ts-ignore */}\r\n\t\t\t\t<Controller \r\n\t\t\t\t\tcontrol={control}\r\n\t\t\t\t\tname={'birthDate'}\r\n\t\t\t\t\trender={({field: {value, onChange}}) => (\r\n\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\tclassName={classes.fieldWrapper}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<LocalizationProvider dateAdapter={AdapterDayjs}>\r\n\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\tlabel='Дата народження'\r\n\t\t\t\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\t\t\t\trenderInput={\r\n\t\t\t\t\t\t\t\t\t\t(params) => <TextField {...params} />\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</LocalizationProvider>\r\n\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t{/* @ts-ignore */}\r\n\t\t\t\t<Controller \r\n\t\t\t\t\tcontrol={control}\r\n\t\t\t\t\tname={'aboutMe'}\r\n\t\t\t\t\trules={{\r\n\t\t\t\t\t\trequired: \"Це поле є обов'язковим\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t\trender={({}) => (\r\n\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\tclassName={classes.fieldWrapper}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\terror={Boolean(errors.aboutMe)}\r\n\t\t\t\t\t\t\t\tmultiline\r\n\t\t\t\t\t\t\t\tmaxRows={6}\r\n\t\t\t\t\t\t\t\tminRows={4}\r\n\t\t\t\t\t\t\t\tlabel=\"Про себе\"\r\n\t\t\t\t\t\t\t\tdefaultValue={undefined || ''}\r\n\t\t\t\t\t\t\t\tvariant='outlined'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t</form>\r\n\t\t\t<button className={classes.btn} onClick={nextStep}>\r\n\t\t\t\t<span>Далі</span>\r\n\t\t\t\t<IconButton className={classes.iconWrapper}>\r\n\t\t\t\t\t<EastIcon color='primary' />\r\n\t\t\t\t</IconButton>\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t)\r\n}  \r\n","import React, { ChangeEvent, useState } from 'react';\r\nimport classes from './Steps.module.scss';\r\nimport studyImg from '../../../assets/images/study-icon.png';\r\nimport EastIcon from '@mui/icons-material/East';\r\nimport { Control, FieldErrors, Controller, UseFormTrigger, UseFormSetValue } from 'react-hook-form';\r\nimport { RegistrationFieldValues } from '../Registration';\r\nimport { FormControl, TextField, IconButton, InputLabel, MenuItem, Select, Autocomplete, CircularProgress, FormHelperText } from '@mui/material';\r\nimport { ControllerFieldType, SchoolSearchItemType } from '../../../utils/types';\r\nimport { searchSchool } from '../../../Redux/account/account-reducer';\r\nimport { SaveBtn } from '../../../UI/SaveBtn';\r\n\r\n\r\ntype PropsType = {\r\n\tcontrol: Control<RegistrationFieldValues, any>,\r\n\terrors: FieldErrors<RegistrationFieldValues>,\r\n\ttrigger: UseFormTrigger<RegistrationFieldValues>,\r\n\tsetValue: UseFormSetValue<RegistrationFieldValues>,\r\n\tnextStep: () => void,\r\n};\r\n\r\nexport type SchoolOptionType = {\r\n\tid: number,\r\n\tname: string,\r\n};\r\n\r\nexport const SchoolFields: React.FC<PropsType> = ({control, errors, nextStep, trigger, setValue}) => {\r\n\t//is user can search school\r\n\tconst [open, setOpen] = useState<boolean>(false)\r\n\t//is schools fetching\r\n\tconst [loading, setLoading] = useState<boolean>(false);\r\n\t//schools list\r\n\t//@ts-ignore //хз, що тут робити, який інітіал валює поставити?\r\n\tconst [schoolsOptions, setSchoolsOptions] = useState<SchoolOptionType[]>([{}]);\r\n\r\n\tconst handleSearchChange = async (event: ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetLoading(true);\r\n\t\t//search string\r\n\t\tconst value = event.target.value;\r\n\r\n\t\t//get from db list of founded schools\r\n\t\tconst foundedSchools = await searchSchool(value);\r\n\t\tconst schools: SchoolOptionType[] = foundedSchools.map(school => ({\r\n\t\t\tname: school.name,\r\n\t\t\tid: school.id,\r\n\t\t}));\r\n\r\n\r\n\t\tconsole.log('schools', schools);\r\n\r\n\t\t//set founded schools to options\r\n\t\tsetSchoolsOptions(schools);\r\n\t\tsetLoading(false);\r\n\t}\r\n\r\n\t//масив номерів класів\r\n\tconst classesNums = [1, 2, 3, 4, 5, 6, , 8, 9, 10, 11];\r\n\tconst classesOptions = classesNums.map(num => (\r\n\t\t<MenuItem value={num}>{num}</MenuItem>\t\t\t\t\t\t\r\n\t))\r\n\r\n\treturn (\r\n\t\t<section className={classes.Step}>\r\n\t\t\t<h2 className={classes.title}>Напишіть про себе</h2>\r\n\t\t\t<div className={classes.image}>\r\n\t\t\t\t<img src={studyImg} />\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.form}>\r\n\t\t\t\t{/* Назва навчального закладу */}\r\n\t\t\t\t{/* @ts-ignore */}\r\n\t\t\t\t<Controller \r\n\t\t\t\t\tcontrol={control}\r\n\t\t\t\t\tname={'schoolId'}\r\n\t\t\t\t\trender={({field: {value, onChange}} : ControllerFieldType) => {\r\n\t\t\t\t\t\tconsole.log('school set value', value);\r\n\t\t\t\t\t\treturn <FormControl \r\n\t\t\t\t\t\t\tfullWidth \r\n\t\t\t\t\t\t\tclassName={classes.fieldWrapper}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Autocomplete\r\n\t\t\t\t\t\t\t\tsx={{ width: 300 }}\r\n\t\t\t\t\t\t\t\topen={open}\r\n\t\t\t\t\t\t\t\tonOpen={() => {\r\n\t\t\t\t\t\t\t\t\tsetOpen(true);\r\n\t\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\t\tonClose={() => {\r\n\t\t\t\t\t\t\t\t\tsetOpen(false);\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tgetOptionLabel={(option) => option.name}\r\n\t\t\t\t\t\t\t\tnoOptionsText='Навчальних закладів не знайдено'\r\n\t\t\t\t\t\t\t\tloadingText='Завантаження...'\r\n\t\t\t\t\t\t\t\toptions={schoolsOptions}\r\n\t\t\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\t\t\tonChange={(e, value) => {\r\n\t\t\t\t\t\t\t\t\tif(value.id) {\r\n\t\t\t\t\t\t\t\t\t\tsetValue('schoolId', value.id);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tloading={loading}\r\n\t\t\t\t\t\t\t\trenderInput={(params) => (\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t{...params}\r\n\t\t\t\t\t\t\t\t\tlabel=\"Знайдіть Ваш навчальний заклад\"\r\n\t\t\t\t\t\t\t\t\tonChange={handleSearchChange}\r\n\t\t\t\t\t\t\t\t\terror={!!errors.schoolId}\r\n\t\t\t\t\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\t\t\t\t\t...params.InputProps,\r\n\t\t\t\t\t\t\t\t\t\tendAdornment: (\r\n\t\t\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t\t{loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n\t\t\t\t\t\t\t\t\t\t\t{params.InputProps.endAdornment}\r\n\t\t\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t{!!errors.schoolId && <FormHelperText className={classes.errorText}>Помилка</FormHelperText>}\r\n\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t{/* Номер класу */}\r\n\t\t\t\t{/* @ts-ignore */}\r\n\t\t\t\t<Controller \r\n\t\t\t\t\tcontrol={control}\r\n\t\t\t\t\tname={'class'}\r\n\t\t\t\t\trules={{\r\n\t\t\t\t\t\trequired: \"Це поле є обов'язковим\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t\trender={({field: {onChange, value}} : ControllerFieldType) => (\r\n\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\tclassName={classes.fieldWrapper}\r\n\t\t\t\t\t\t\terror={!!errors.schoolId}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<InputLabel id=\"classNum-select\">Ваш клас</InputLabel>\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tlabelId=\"classNum-select\"\r\n\t\t\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\t\t\tlabel=\"Ваш клас\"\r\n\t\t\t\t\t\t\t\terror={Boolean(errors.class)}\r\n\t\t\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{classesOptions}\r\n\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t{!!errors.class && <FormHelperText className={classes.errorText}>Помилка</FormHelperText>}\r\n\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<SaveBtn onClick={nextStep} className={classes.btn} />\r\n\t\t</section>\r\n\t)\r\n}\r\n","import React, { useState } from 'react';\r\nimport classes from './Steps.module.scss';\r\nimport loginImg from '../../../assets/images/login-img.png';\r\nimport EastIcon from '@mui/icons-material/East';   \r\nimport { FormControl, Autocomplete, TextField, CircularProgress, InputLabel, IconButton, InputAdornment, OutlinedInput } from '@mui/material';\r\nimport { Select } from 'antd';\r\nimport { ControllerFieldType } from '../../../utils/types';\r\nimport { Control, Controller, FieldErrors } from 'react-hook-form';\r\nimport { RegistrationFieldValues } from '../Registration';\r\nimport { VisibilityOff, Visibility } from '@mui/icons-material';\r\nimport { values } from 'lodash';\r\nimport { SaveBtn } from '../../../UI/SaveBtn';\r\n\r\ntype PropsType = {\r\n\tcontrol: Control<RegistrationFieldValues, any>,\r\n\terrors: FieldErrors<RegistrationFieldValues>,\r\n\tnextStep: () => void,\r\n};\r\n\r\nexport const LoginFields: React.FC<PropsType> = ({control, errors, nextStep}) => {\r\n\tconst [values, setValues] = React.useState({\r\n\t\tamount: '',\r\n\t\tpassword: '',\r\n\t\tweight: '',\r\n\t\tweightRange: '',\r\n\t\tshowPassword: false,\r\n\t});\r\n  \r\n\tconst handleClickShowPassword = () => {\r\n\t\tsetValues({\r\n\t\t  ...values,\r\n\t\t  showPassword: !values.showPassword,\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<section className={classes.Step}>\r\n\t\t\t<h2 className={classes.title}>Уведіть дані акаунту</h2>\r\n\t\t\t<div className={classes.image}>\r\n\t\t\t\t<img src={loginImg} />\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.form}>\r\n\t\t\t\t{/* Логін */}\r\n\t\t\t\t{/* @ts-ignore */}\r\n\t\t\t\t<Controller \r\n\t\t\t\t\tcontrol={control}\r\n\t\t\t\t\tname={'email'}\r\n\t\t\t\t\trules={{\r\n\t\t\t\t\t\trequired: `Це поле є обов'язковим`,\r\n\t\t\t\t\t\tpattern: /[A-z][1-9]/,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\trender={({field: {value, onChange}} : ControllerFieldType) => (\r\n\t\t\t\t\t\t<FormControl fullWidth className={classes.fieldWrapper}>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\t\t\tlabel='Електронна пошта'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t{/* Пароль*/}\r\n\t\t\t\t{/* @ts-ignore */}\r\n\t\t\t\t<Controller \r\n\t\t\t\t\tcontrol={control}\r\n\t\t\t\t\tname={'password'}\r\n\t\t\t\t\trules={{\r\n\t\t\t\t\t\trequired: \"Це поле є обов'язковим\",\r\n\t\t\t\t\t\tpattern: /[A-Z]+  /\r\n\t\t\t\t\t}}\r\n\t\t\t\t\trender={({field: {onChange, value}} : ControllerFieldType) => (\r\n\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\tclassName={classes.fieldWrapper}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<InputLabel htmlFor=\"outlined-adornment-password\">Пароль</InputLabel>\r\n\t\t\t\t\t\t\t<OutlinedInput\r\n\t\t\t\t\t\t\t\tid=\"outlined-adornment-password\"\r\n\t\t\t\t\t\t\t\ttype={values.showPassword ? 'text' : 'password'}\r\n\t\t\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\t\t\tendAdornment={\r\n\t\t\t\t\t\t\t\t<InputAdornment position=\"end\">\r\n\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\taria-label=\"toggle password visibility\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={handleClickShowPassword}\r\n\t\t\t\t\t\t\t\t\t\tedge=\"end\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{values.showPassword ? <VisibilityOff /> : <Visibility />}\r\n\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t</InputAdornment>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tlabel=\"Пароль\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\r\n\t\t\t<SaveBtn className={classes.btn}  onClick={nextStep}/>\r\n\t\t</section>\r\n\t)\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"AvatarUpload_container__IFv02\",\"Step\":\"AvatarUpload_Step__VVU5B\",\"form\":\"AvatarUpload_form__ScnuI\",\"fieldWrapper\":\"AvatarUpload_fieldWrapper__Z5e7E\",\"image\":\"AvatarUpload_image__JyurF\",\"title\":\"AvatarUpload_title__a7UNx\",\"btn\":\"AvatarUpload_btn__cWqy6\",\"iconWrapper\":\"AvatarUpload_iconWrapper__wypZv\",\"icon\":\"AvatarUpload_icon__JpEc4\",\"AvatarUpload\":\"AvatarUpload_AvatarUpload__OGBr2\",\"currentAvatar\":\"AvatarUpload_currentAvatar__fMQXz\",\"addAvatar\":\"AvatarUpload_addAvatar__GJF1C\",\"input\":\"AvatarUpload_input__UD-02\",\"label\":\"AvatarUpload_label__qSHWG\",\"addIcon\":\"AvatarUpload_addIcon__izPwd\",\"avatar\":\"AvatarUpload_avatar__If2VW\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"CloseBtn_container__zZM2A\",\"CloseBtn\":\"CloseBtn_CloseBtn__FkaLC\",\"icon\":\"CloseBtn_icon__b1L5G\"};","import React from 'react';\r\nimport HighlightOffIcon from '@mui/icons-material/HighlightOff';\r\nimport classes from './CloseBtn.module.scss';\r\nimport cn from 'classnames';\r\n\r\ntype PropsType = {\r\n\tonClick: () => void,\r\n\tclassName?: string,\r\n}\r\n\r\nexport const CloseBtn: React.FC<PropsType> = ({onClick, className}) => {\r\n\treturn (\r\n\t\t<button className={cn(classes.CloseBtn, className)} onClick={onClick}>\r\n\t\t\t<HighlightOffIcon className={classes.icon} color='error'/>\r\n\t\t</button>\r\n\t)\r\n}\r\n","import { IconButton } from '@mui/material';\r\nimport Avatar from '@mui/material/Avatar/Avatar';\r\nimport React, { ChangeEvent, useEffect, useState } from 'react';\r\nimport { UseFormGetValues, UseFormRegister, UseFormSetValue } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectCurrAvatarUrl, selectMyUid } from '../../../../Redux/account/account-selectors';\r\nimport { RegistrationFieldValues } from '../../Registration';\r\nimport classes from './AvatarUpload.module.scss';\r\nimport { sendMyCurrentAvatar } from '../../../../Redux/account/account-reducer';\r\nimport { AppDispatchType, useAppDispatch } from '../../../../Redux/store';\r\nimport { Modal } from '../../../../UI/Modal';\r\nimport AvatarEdit from 'react-avatar-edit';\r\nimport { SaveBtn } from '../../../../UI/SaveBtn';\r\nimport { CloseBtn } from '../../../../UI/CloseBtn';\r\nimport { dataURItoBlob } from '../../../../utils/helpers/converters';\r\n\r\n\r\ntype PropsType = {\r\n\tregister: UseFormRegister<RegistrationFieldValues>,\r\n\tgetValues: UseFormGetValues<RegistrationFieldValues>, \r\n\tsetValue: UseFormSetValue<RegistrationFieldValues>,\r\n\tsubmit: () => void,\r\n};\r\n\r\nfunction stringToColor(string: string) {\r\n\tlet hash = 0;\r\n\tlet i;\r\n \r\n\t/* eslint-disable no-bitwise */\r\n\tfor (i = 0; i < string.length; i += 1) {\r\n\t  hash = string.charCodeAt(i) + ((hash << 5) - hash);\r\n\t}\r\n \r\n\tlet color = '#';\r\n \r\n\tfor (i = 0; i < 3; i += 1) {\r\n\t  const value = (hash >> (i * 8)) & 0xff;\r\n\t  color += `00${value.toString(16)}`.slice(-2);\r\n\t}\r\n\t/* eslint-enable no-bitwise */\r\n \r\n\treturn color;\r\n}\r\n\r\nfunction stringAvatar(name: string) {\r\n\treturn {\r\n\t  sx: {\r\n\t\t bgcolor: '#fff'\r\n\t  },\r\n\t  //взяти першу букву прізвища та імені\r\n\t  children: `${name.split(' ')[0][0]}${name.split(' ')[1][0]}`,\r\n\t};\r\n}\r\n\r\nexport const AvatarUpload: React.FC<PropsType> = ({register, getValues, setValue, submit}) => {\r\n\tconst [isCutting, setIsCutting] = useState<boolean>(false);\r\n\tconst [localImgSrc, setLocalImgSrc] = useState<null | string>(null);\r\n\r\n\r\n\t//@ts-ignore\r\n\tconst userFullname = `${getValues('name')} ${getValues('surname')}`;\r\n\tconsole.log('fullname:', userFullname);\r\n\tconst avatarUrl = useSelector(selectCurrAvatarUrl);\r\n\r\n\tconst dispatch: AppDispatchType = useAppDispatch();\r\n\tconst uid = useSelector(selectMyUid);\r\n\r\n\t//when user selected file\r\n\tconst inputChangeHandler = async (e: ChangeEvent<HTMLInputElement>) => {\r\n\r\n\t\t//TODO:\r\n\t\t//it's in other paart of component (avatr cut)\r\n\t\t\t//треба отримати шлях до обраного зображення\r\n\r\n\t\tif (e.target.files && e.target.files.length > 0) {\r\n\t\t\tconsole.log('file... :', e.target.files[0]);\r\n\t\t\tconst selectedFile: File = e.target.files[0]; \r\n\r\n\t\t\t//end function\r\n\t\t\t//check if file is too big\r\n\t\t\tif(e.target.files[0].size > 71680){\r\n\t\t\t\talert(\"File is too big!\");\r\n\t\t\t\te.target.value = \"\";\r\n\t\t\t\treturn;\r\n\t\t\t};\r\n\r\n\t\t\t//set local url\r\n\t\t\t// if (e.target.files && e.target.files.length > 0) {\r\n\t\t\t// \tconst reader = new FileReader();\r\n\t\t\t// \treader.addEventListener('load', async () => {\r\n\t\t\t// \t  setLocalImgSrc(e.target.value);\r\n\t\t\t// \t  setIsCutting(true);\r\n\t\t\t// \t});\r\n\t\t\t// \treader.readAsDataURL(e.target.files[0]);\r\n\t\t\t//  }\r\n\r\n\t\t\tif(uid) {\r\n\t\t\t\tdispatch(sendMyCurrentAvatar(e.target.files[0], uid));\r\n\t\t\t}\r\n\t\t }\r\n\r\n\t\t// //@ts-ignore // капець із цим каллером !!!\r\n\t\t// console.log('uploadig file', getValues('avatar'), 'uid', uid);\r\n\r\n\t\t// console.log('event', e.target.files ? e.target.files[0] : null);\r\n\t}\r\n\r\n\t//очистити все\r\n\tconst close = () => {\r\n\t\tsetIsCutting(false);\r\n\t\tsetLocalImgSrc(null);\r\n\t}\r\n\r\n\t// надіслати файл на сервер\r\n\tconst save = () => {\r\n\t\tif(localImgSrc) {\r\n\t\t\tconst blob = dataURItoBlob(localImgSrc);\r\n\t\t\tif(uid && blob) {\r\n\t\t\t\tdispatch(sendMyCurrentAvatar(blob, uid));\r\n\t\t\t}\r\n\t\t}\r\n\t\tclose();\r\n\t}\r\n\r\n\t//зберегти проміжкову версію кропу\r\n\tconst onCrop = (preview: string) => {\r\n\t\tconsole.log('preview', preview);\r\n\t\tsetLocalImgSrc(preview);\r\n\t}\r\n\r\n\tconsole.log('avatarUrl', avatarUrl);\r\n\tconsole.log('img src', localImgSrc);\r\n\r\n\treturn (\r\n\t\t<div className={`${classes.AvatarUpload} ${classes.Step}`}>\r\n\t\t\t<h2 className={classes.title}>{`Бажаєте ${ avatarUrl ? 'змінити' : `додати`} своє фото?`}</h2>\r\n\t\t\t{localImgSrc &&\r\n\t\t\t\t<Modal isShow={isCutting}>\r\n\t\t\t\t\t<div className={classes.cutAvatar}>\r\n\t\t\t\t\t\t<CloseBtn onClick={close} className={classes.closeBtn} />\r\n\t\t\t\t\t\t<AvatarEdit\r\n\t\t\t\t\t\t\twidth={390}\r\n\t\t\t\t\t\t\theight={295}\r\n\t\t\t\t\t\t\tonCrop={onCrop}\r\n\t\t\t\t\t\t\tonClose={close}\r\n\t\t\t\t\t\t\t//onBeforeFileLoad={onBeforeFileLoad}\r\n\t\t\t\t\t\t\tsrc={localImgSrc}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<SaveBtn onClick={save} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Modal>\r\n\t\t\t}\r\n\t\t\t<div className={classes.currentAvatar}>\r\n\t\t\t\t{avatarUrl ?\r\n\t\t\t\t\t<Avatar className={classes.avatar} src={avatarUrl ||  undefined} />\r\n\t\t\t\t:\r\n\t\t\t\t\t<Avatar className={classes.avatar} {...stringAvatar(userFullname)} />\r\n\t\t\t\t}\r\n\t\t\t\t<div className={classes.addAvatar}>\r\n\t\t\t\t\t<label htmlFor='avatar' className={classes.label}>\r\n\t\t\t\t\t\t<div className={classes.addIcon}></div>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<input \r\n\t\t\t\t\t\ttype={'file'}\r\n\t\t\t\t\t\tid='avatar' \r\n\t\t\t\t\t\t//accept=\"image/png, image/gif, image/jpg\" \r\n\t\t\t\t\t\tclassName={classes.input}\r\n\t\t\t\t\t\tonChange={inputChangeHandler}\r\n\t\t\t\t\t\t//{...register('avatar')}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<SaveBtn onClick={submit}/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n ","import React, { useContext, useRef, useState } from 'react'\r\nimport { useForm } from 'react-hook-form';\r\nimport { AccountDataType } from '../../utils/types';\r\nimport { InitialsFields } from './Steps/InitialsFields';\r\nimport classes from './Registration.module.scss';\r\nimport { InfoFields } from './Steps/InfoFields';\r\nimport { SchoolFields } from './Steps/SchoolFields';\r\nimport { AppDispatchType, useAppDispatch } from '../../Redux/store';\r\nimport { loginDataReceived } from '../../Redux/account/account-reducer';\r\nimport { LoginFields } from './Steps/LoginFields';\r\nimport { AvatarUpload } from './Steps/AvatarUpload/AvatarUpload';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectMyUid } from '../../Redux/account/account-selectors';\r\nimport { FirebaseContext } from '../..';\r\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\r\n\r\ntype PropsType = {};\r\n\r\nexport type RegistrationFieldValues = AccountDataType & {\r\n\tavatar: FileList\r\n};\r\n\r\nexport const Registration: React.FC<PropsType> = ({}) => {\r\n\t//number of step\r\n\tconst [step, setStep] = useState<number>(0);\r\n\tconst { control, handleSubmit, reset, formState: {errors}, trigger, watch, setValue, register, getValues } = useForm<RegistrationFieldValues>();\r\n\r\n\tconst dispatch: AppDispatchType = useAppDispatch();\r\n\tconst uid = useSelector(selectMyUid);\t\t\r\n\tconst {auth} = useContext(FirebaseContext);\r\n\r\n\tconst formRef= useRef<HTMLFormElement>(null);\r\n\tconst submit = () => {\r\n\t\tformRef.current?.submit();\r\n\t}\r\n\t//TODO:\r\n\t//Delete this\r\n\r\n\t// //перетворення файлу аватара в посилання на нього\r\n\t// useEffect(() => {\r\n\t// \tconsole.log('uploadig file', getValues('avatar') ? getValues('avatar')[0] : undefined, 'uid', uid);\r\n\r\n\t// \tif(uid) {\r\n\t// \t\tdispatch(sendMyCurrentAvatar(getValues('avatar')[0], uid));\r\n\t// \t}\r\n\r\n\t// //@ts-ignore// капець із цим каллером !!!\r\n\t// }, [getValues('avatar')]);\r\n\r\n\t//надсилання даних на сервер\r\n\tconst onSubmit = async (data: AccountDataType) => {\r\n\t\tconsole.log('submit data', data);\r\n\t\t//dispatch(accountDataReceived(data));\r\n\t\t//Реєстрація акаунту на базі\r\n\r\n\t\tif(auth) {\r\n\t\t\ttry {\r\n\t\t\t\tconst userCredential = await createUserWithEmailAndPassword(auth, data.email, data.password);\r\n\t\t\t\tconst user = userCredential.user;\r\n\t\t\t\tconsole.log('user', user);\r\n\t\t\t\tdispatch(loginDataReceived(user));\r\n\t\t\t} catch (error: any) {\r\n\t\t\t\tconst errorCode = error.code;\r\n\t\t\t\tconst errorMessage = error.message;\r\n\t\t\t\tconsole.log('register error', errorMessage);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t//перейти на наступний крок\r\n\tconst nextStep = () => setStep((currStep) => currStep + 1); //+1 to curr Step\r\n\r\n\t//step element\r\n\tlet currStep: JSX.Element | null = null;\r\n\r\n\tswitch (step) {\r\n\t\tcase 0: \r\n\t\t\tcurrStep = <LoginFields errors={errors} control={control} nextStep={nextStep}/>\r\n\t\t\tbreak;\r\n\t\tcase 1:\r\n\t\t\tcurrStep = <InitialsFields control={control} nextStep={nextStep}/>\r\n\t\t\tbreak;\r\n\t\tcase 2:\r\n\t\t\tcurrStep = <InfoFields errors={errors} control={control} nextStep={nextStep} />\r\n\t\t\tbreak;\r\n\t\tcase 3:\r\n\t\t\tcurrStep = <SchoolFields setValue={setValue} errors={errors} control={control} nextStep={nextStep} trigger={trigger}/>\r\n\t\t\tbreak;\r\n\t\tcase 4:\r\n\t\t\tcurrStep = <AvatarUpload register={register} getValues={getValues} setValue={setValue} submit={submit}/>\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<form ref={formRef} className={classes.Registration} onSubmit={handleSubmit(onSubmit)}>\r\n\t\t\t{currStep}\r\n\t\t</form>\r\n\t)\r\n}\r\n","import Icon, { HomeOutlined } from '@ant-design/icons';\r\nimport type { CustomIconComponentProps } from '@ant-design/icons/lib/components/Icon';\r\n\r\nimport { Auth, getAuth, GoogleAuthProvider, signInWithPopup } from 'firebase/auth';\r\nimport React, { useContext } from 'react';\r\nimport { FirebaseContext } from '../..';\r\nimport { UserType } from '../../utils/types';\r\nimport classes from './Login.module.scss';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport { Navigate, useNavigate } from 'react-router-dom';\r\nimport Preloader from '../../UI/Preloader';\r\nimport { GoogleIcon } from '../../UI/Icons';\r\nimport { useAppDispatch } from '../../Redux/store';\r\nimport { loginDataReceived, sendMyAccountData } from '../../Redux/account/account-reducer';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectMyLoginData } from '../../Redux/account/account-selectors';\r\nimport { Button } from '@mui/joy';\r\nimport { Registration } from '../Registration';\r\n\r\ntype PropsType = {}\r\n\r\nconst Login: React.FC<PropsType> = ({}) => {\r\n\tconst { auth } = useContext(FirebaseContext);\r\n\r\n\tconst authData = useSelector(selectMyLoginData);\r\n\r\n\tconsole.log('Login', authData);\r\n\r\n\tconst dispatch = useAppDispatch();\r\n\tconst setAccountData = (data: UserType) => {\r\n\t\tdispatch(loginDataReceived(data));\r\n\t\tdispatch(sendMyAccountData(null));\r\n\t}\r\n\r\n\tif(!!authData) return <Navigate to='/account' replace={true}/>\t\r\n\r\n\tconst login = async () => {\r\n\t\tconst provider = new GoogleAuthProvider();\r\n\t\tconst { user } = await signInWithPopup(auth as Auth, provider);\r\n\r\n\t\tsetAccountData(user);\r\n\t}\r\n\r\n\t\r\n\tconst handleClick = () => {\r\n\t\tconsole.log('handle click');\r\n\t\treturn <Registration />\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.Login}>\r\n\t\t\t<Button onClick={login} className={classes.loginBtn}>\r\n\t\t\t\tУвійти \r\n\t\t\t\t<GoogleIcon className={classes.googleIcon}/>\r\n\t\t\t</Button>\r\n\t\t\t<Button onClick={handleClick} className={classes.registerBtn}>\r\n\t\t\t\tЗареєструватися\r\n\t\t\t</Button>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Login"],"names":["SaveBtn","onClick","className","cn","classes","IconButton","color","East","InitialsFields","control","nextStep","name","render","field","value","onChange","FormControl","fullWidth","TextField","label","rules","pattern","InfoFields","errors","src","LocalizationProvider","dateAdapter","AdapterDayjs","DatePicker","renderInput","params","required","error","Boolean","aboutMe","multiline","maxRows","minRows","defaultValue","variant","SchoolFields","setValue","trigger","useState","open","setOpen","loading","setLoading","schoolsOptions","setSchoolsOptions","handleSearchChange","event","target","searchSchool","foundedSchools","schools","map","school","id","console","log","classesOptions","num","MenuItem","Autocomplete","sx","width","onOpen","onClose","getOptionLabel","option","noOptionsText","loadingText","options","e","schoolId","InputProps","endAdornment","CircularProgress","size","FormHelperText","InputLabel","Select","labelId","class","LoginFields","React","amount","password","weight","weightRange","showPassword","values","setValues","handleClickShowPassword","htmlFor","OutlinedInput","type","InputAdornment","position","edge","VisibilityOff","Visibility","CloseBtn","HighlightOff","AvatarUpload","register","getValues","submit","isCutting","setIsCutting","localImgSrc","setLocalImgSrc","userFullname","avatarUrl","useSelector","selectCurrAvatarUrl","dispatch","useAppDispatch","uid","selectMyUid","inputChangeHandler","files","length","alert","sendMyCurrentAvatar","close","Modal","isShow","height","onCrop","preview","blob","dataURItoBlob","Avatar","undefined","bgcolor","children","split","Registration","step","setStep","useForm","handleSubmit","reset","formState","watch","auth","useContext","FirebaseContext","formRef","useRef","onSubmit","data","createUserWithEmailAndPassword","email","userCredential","user","loginDataReceived","code","errorMessage","message","currStep","current","ref","authData","selectMyLoginData","to","replace","login","provider","GoogleAuthProvider","signInWithPopup","sendMyAccountData","Button"],"sourceRoot":""}